-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj\hdlsrc\frequency_synth\frequency_synth_dut.vhd
-- Created: 2020-10-19 10:03:37
-- 
-- Generated by MATLAB 9.8 and HDL Coder 3.16
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: frequency_synth_dut
-- Source Path: frequency_synth/frequency_synth_dut
-- Hierarchy Level: 1
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY frequency_synth_dut IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        dut_enable                        :   IN    std_logic;  -- ufix1
        Constant_rsvd                     :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
        Enable_NCO_0                      :   IN    std_logic;  -- ufix1
        Enable_NCO_1                      :   IN    std_logic;  -- ufix1
        Enable_NCO_2                      :   IN    std_logic;  -- ufix1
        Enable_NCO_3                      :   IN    std_logic;  -- ufix1
        Gain_NCO_0                        :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
        Gain_NCO_1                        :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
        Gain_NCO_2                        :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
        Gain_NCO_3                        :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
        Step_Size_0                       :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
        Step_Size_1                       :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
        Step_Size_2                       :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
        Step_Size_3                       :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
        ce_out                            :   OUT   std_logic;  -- ufix1
        Valid_NCO_0                       :   OUT   std_logic;  -- ufix1
        Data_NCO_0                        :   OUT   std_logic_vector(127 DOWNTO 0);  -- ufix128
        Valid_NCO_1                       :   OUT   std_logic;  -- ufix1
        Data_NCO_1                        :   OUT   std_logic_vector(127 DOWNTO 0);  -- ufix128
        Valid_NCO_2                       :   OUT   std_logic;  -- ufix1
        Data_NCO_2                        :   OUT   std_logic_vector(127 DOWNTO 0);  -- ufix128
        Valid_NCO_3                       :   OUT   std_logic;  -- ufix1
        Data_NCO_3                        :   OUT   std_logic_vector(127 DOWNTO 0)  -- ufix128
        );
END frequency_synth_dut;


ARCHITECTURE rtl OF frequency_synth_dut IS

  -- Component Declarations
  COMPONENT frequency_synth_src_Frequency_Synthesis
    PORT( clk                             :   IN    std_logic;
          clk_enable                      :   IN    std_logic;
          reset                           :   IN    std_logic;
          Constant_rsvd                   :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          Enable_NCO_0                    :   IN    std_logic;  -- ufix1
          Enable_NCO_1                    :   IN    std_logic;  -- ufix1
          Enable_NCO_2                    :   IN    std_logic;  -- ufix1
          Enable_NCO_3                    :   IN    std_logic;  -- ufix1
          Gain_NCO_0                      :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
          Gain_NCO_1                      :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
          Gain_NCO_2                      :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
          Gain_NCO_3                      :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
          Step_Size_0                     :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          Step_Size_1                     :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          Step_Size_2                     :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          Step_Size_3                     :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          ce_out                          :   OUT   std_logic;  -- ufix1
          Valid_NCO_0                     :   OUT   std_logic;  -- ufix1
          Data_NCO_0                      :   OUT   std_logic_vector(127 DOWNTO 0);  -- ufix128
          Valid_NCO_1                     :   OUT   std_logic;  -- ufix1
          Data_NCO_1                      :   OUT   std_logic_vector(127 DOWNTO 0);  -- ufix128
          Valid_NCO_2                     :   OUT   std_logic;  -- ufix1
          Data_NCO_2                      :   OUT   std_logic_vector(127 DOWNTO 0);  -- ufix128
          Valid_NCO_3                     :   OUT   std_logic;  -- ufix1
          Data_NCO_3                      :   OUT   std_logic_vector(127 DOWNTO 0)  -- ufix128
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : frequency_synth_src_Frequency_Synthesis
    USE ENTITY work.frequency_synth_src_Frequency_Synthesis(rtl);

  -- Signals
  SIGNAL enb                              : std_logic;
  SIGNAL Enable_NCO_0_sig                 : std_logic;  -- ufix1
  SIGNAL Enable_NCO_1_sig                 : std_logic;  -- ufix1
  SIGNAL Enable_NCO_2_sig                 : std_logic;  -- ufix1
  SIGNAL Enable_NCO_3_sig                 : std_logic;  -- ufix1
  SIGNAL ce_out_sig                       : std_logic;  -- ufix1
  SIGNAL Valid_NCO_0_sig                  : std_logic;  -- ufix1
  SIGNAL Data_NCO_0_sig                   : std_logic_vector(127 DOWNTO 0);  -- ufix128
  SIGNAL Valid_NCO_1_sig                  : std_logic;  -- ufix1
  SIGNAL Data_NCO_1_sig                   : std_logic_vector(127 DOWNTO 0);  -- ufix128
  SIGNAL Valid_NCO_2_sig                  : std_logic;  -- ufix1
  SIGNAL Data_NCO_2_sig                   : std_logic_vector(127 DOWNTO 0);  -- ufix128
  SIGNAL Valid_NCO_3_sig                  : std_logic;  -- ufix1
  SIGNAL Data_NCO_3_sig                   : std_logic_vector(127 DOWNTO 0);  -- ufix128

BEGIN
  u_frequency_synth_src_Frequency_Synthesis : frequency_synth_src_Frequency_Synthesis
    PORT MAP( clk => clk,
              clk_enable => enb,
              reset => reset,
              Constant_rsvd => Constant_rsvd,  -- ufix32
              Enable_NCO_0 => Enable_NCO_0_sig,  -- ufix1
              Enable_NCO_1 => Enable_NCO_1_sig,  -- ufix1
              Enable_NCO_2 => Enable_NCO_2_sig,  -- ufix1
              Enable_NCO_3 => Enable_NCO_3_sig,  -- ufix1
              Gain_NCO_0 => Gain_NCO_0,  -- sfix16_En14
              Gain_NCO_1 => Gain_NCO_1,  -- sfix16_En14
              Gain_NCO_2 => Gain_NCO_2,  -- sfix16_En14
              Gain_NCO_3 => Gain_NCO_3,  -- sfix16_En14
              Step_Size_0 => Step_Size_0,  -- ufix32
              Step_Size_1 => Step_Size_1,  -- ufix32
              Step_Size_2 => Step_Size_2,  -- ufix32
              Step_Size_3 => Step_Size_3,  -- ufix32
              ce_out => ce_out_sig,  -- ufix1
              Valid_NCO_0 => Valid_NCO_0_sig,  -- ufix1
              Data_NCO_0 => Data_NCO_0_sig,  -- ufix128
              Valid_NCO_1 => Valid_NCO_1_sig,  -- ufix1
              Data_NCO_1 => Data_NCO_1_sig,  -- ufix128
              Valid_NCO_2 => Valid_NCO_2_sig,  -- ufix1
              Data_NCO_2 => Data_NCO_2_sig,  -- ufix128
              Valid_NCO_3 => Valid_NCO_3_sig,  -- ufix1
              Data_NCO_3 => Data_NCO_3_sig  -- ufix128
              );

  Enable_NCO_0_sig <= Enable_NCO_0;

  Enable_NCO_1_sig <= Enable_NCO_1;

  Enable_NCO_2_sig <= Enable_NCO_2;

  Enable_NCO_3_sig <= Enable_NCO_3;

  enb <= dut_enable;

  ce_out <= ce_out_sig;

  Valid_NCO_0 <= Valid_NCO_0_sig;

  Data_NCO_0 <= Data_NCO_0_sig;

  Valid_NCO_1 <= Valid_NCO_1_sig;

  Data_NCO_1 <= Data_NCO_1_sig;

  Valid_NCO_2 <= Valid_NCO_2_sig;

  Data_NCO_2 <= Data_NCO_2_sig;

  Valid_NCO_3 <= Valid_NCO_3_sig;

  Data_NCO_3 <= Data_NCO_3_sig;

END rtl;

