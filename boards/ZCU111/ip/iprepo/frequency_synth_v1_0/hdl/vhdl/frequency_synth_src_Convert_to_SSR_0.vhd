-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj\hdlsrc\frequency_synth\frequency_synth_src_Convert_to_SSR_0.vhd
-- Created: 2020-10-19 10:03:31
-- 
-- Generated by MATLAB 9.8 and HDL Coder 3.16
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: frequency_synth_src_Convert_to_SSR_0
-- Source Path: frequency_synth/Frequency Synthesis/Convert to SSR 0
-- Hierarchy Level: 1
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;
USE work.frequency_synth_src_Frequency_Synthesis_pkg.ALL;

ENTITY frequency_synth_src_Convert_to_SSR_0 IS
  PORT( Signal_re                         :   IN    vector_of_std_logic_vector16(0 TO 3);  -- sfix16_En15 [4]
        Signal_im                         :   IN    vector_of_std_logic_vector16(0 TO 3);  -- sfix16_En15 [4]
        SSR                               :   OUT   std_logic_vector(127 DOWNTO 0)  -- ufix128
        );
END frequency_synth_src_Convert_to_SSR_0;


ARCHITECTURE rtl OF frequency_synth_src_Convert_to_SSR_0 IS

  -- Component Declarations
  COMPONENT frequency_synth_src_Vector_to_SSR_Low
    PORT( Vector                          :   IN    vector_of_std_logic_vector32(0 TO 3);  -- uint32 [4]
          SSR                             :   OUT   std_logic_vector(127 DOWNTO 0)  -- ufix128
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : frequency_synth_src_Vector_to_SSR_Low
    USE ENTITY work.frequency_synth_src_Vector_to_SSR_Low(rtl);

  -- Signals
  SIGNAL Signal_im_signed                 : vector_of_signed16(0 TO 3);  -- sfix16_En15 [4]
  SIGNAL Signal_re_signed                 : vector_of_signed16(0 TO 3);  -- sfix16_En15 [4]
  SIGNAL Bit_Concat_out1                  : vector_of_unsigned32(0 TO 3);  -- uint32 [4]
  SIGNAL Bit_Concat_out1_1                : vector_of_std_logic_vector32(0 TO 3);  -- ufix32 [4]
  SIGNAL y                                : std_logic_vector(127 DOWNTO 0);  -- ufix128

BEGIN
  u_Vector_to_SSR_Low : frequency_synth_src_Vector_to_SSR_Low
    PORT MAP( Vector => Bit_Concat_out1_1,  -- uint32 [4]
              SSR => y  -- ufix128
              );

  outputgen2: FOR k1 IN 0 TO 3 GENERATE
    Signal_im_signed(k1) <= signed(Signal_im(k1));
  END GENERATE;

  outputgen1: FOR k1 IN 0 TO 3 GENERATE
    Signal_re_signed(k1) <= signed(Signal_re(k1));
  END GENERATE;


  Bit_Concat_out1_gen: FOR k IN 0 TO 3 GENERATE
    Bit_Concat_out1(k) <= unsigned(Signal_im_signed(k)) & unsigned(Signal_re_signed(k));
  END GENERATE Bit_Concat_out1_gen;


  outputgen: FOR k1 IN 0 TO 3 GENERATE
    Bit_Concat_out1_1(k1) <= std_logic_vector(Bit_Concat_out1(k1));
  END GENERATE;

  SSR <= y;

END rtl;

