-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj\hdlsrc\simple_window\window_dut.vhd
-- Created: 2020-10-19 10:59:06
-- 
-- Generated by MATLAB 9.8 and HDL Coder 3.16
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: window_dut
-- Source Path: window/window_dut
-- Hierarchy Level: 1
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY window_dut IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        dut_enable                        :   IN    std_logic;  -- ufix1
        enable                            :   IN    std_logic;  -- ufix1
        s_window_valid                    :   IN    std_logic;  -- ufix1
        s_window_data                     :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
        s_real_valid                      :   IN    std_logic;  -- ufix1
        s_real_data                       :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
        s_imag_valid                      :   IN    std_logic;  -- ufix1
        s_imag_data                       :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
        ce_out                            :   OUT   std_logic;  -- ufix1
        m_real_valid                      :   OUT   std_logic;  -- ufix1
        m_real_data                       :   OUT   std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
        m_real_user                       :   OUT   std_logic;  -- ufix1
        m_real_last                       :   OUT   std_logic;  -- ufix1
        m_imag_valid                      :   OUT   std_logic;  -- ufix1
        m_imag_data                       :   OUT   std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
        m_imag_user                       :   OUT   std_logic;  -- ufix1
        m_imag_last                       :   OUT   std_logic  -- ufix1
        );
END window_dut;


ARCHITECTURE rtl OF window_dut IS

  -- Component Declarations
  COMPONENT window_src_Reconfigurable_Window
    PORT( clk                             :   IN    std_logic;
          clk_enable                      :   IN    std_logic;
          reset                           :   IN    std_logic;
          enable                          :   IN    std_logic;  -- ufix1
          s_window_valid                  :   IN    std_logic;  -- ufix1
          s_window_data                   :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
          s_real_valid                    :   IN    std_logic;  -- ufix1
          s_real_data                     :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
          s_imag_valid                    :   IN    std_logic;  -- ufix1
          s_imag_data                     :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
          ce_out                          :   OUT   std_logic;  -- ufix1
          m_real_valid                    :   OUT   std_logic;  -- ufix1
          m_real_data                     :   OUT   std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
          m_real_user                     :   OUT   std_logic;  -- ufix1
          m_real_last                     :   OUT   std_logic;  -- ufix1
          m_imag_valid                    :   OUT   std_logic;  -- ufix1
          m_imag_data                     :   OUT   std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
          m_imag_user                     :   OUT   std_logic;  -- ufix1
          m_imag_last                     :   OUT   std_logic  -- ufix1
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : window_src_Reconfigurable_Window
    USE ENTITY work.window_src_Reconfigurable_Window(rtl);

  -- Signals
  SIGNAL enb                              : std_logic;
  SIGNAL enable_sig                       : std_logic;  -- ufix1
  SIGNAL s_window_valid_sig               : std_logic;  -- ufix1
  SIGNAL s_real_valid_sig                 : std_logic;  -- ufix1
  SIGNAL s_imag_valid_sig                 : std_logic;  -- ufix1
  SIGNAL ce_out_sig                       : std_logic;  -- ufix1
  SIGNAL m_real_valid_sig                 : std_logic;  -- ufix1
  SIGNAL m_real_data_sig                  : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL m_real_user_sig                  : std_logic;  -- ufix1
  SIGNAL m_real_last_sig                  : std_logic;  -- ufix1
  SIGNAL m_imag_valid_sig                 : std_logic;  -- ufix1
  SIGNAL m_imag_data_sig                  : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL m_imag_user_sig                  : std_logic;  -- ufix1
  SIGNAL m_imag_last_sig                  : std_logic;  -- ufix1

BEGIN
  u_window_src_Reconfigurable_Window : window_src_Reconfigurable_Window
    PORT MAP( clk => clk,
              clk_enable => enb,
              reset => reset,
              enable => enable_sig,  -- ufix1
              s_window_valid => s_window_valid_sig,  -- ufix1
              s_window_data => s_window_data,  -- sfix16_En14
              s_real_valid => s_real_valid_sig,  -- ufix1
              s_real_data => s_real_data,  -- sfix16_En15
              s_imag_valid => s_imag_valid_sig,  -- ufix1
              s_imag_data => s_imag_data,  -- sfix16_En15
              ce_out => ce_out_sig,  -- ufix1
              m_real_valid => m_real_valid_sig,  -- ufix1
              m_real_data => m_real_data_sig,  -- sfix16_En15
              m_real_user => m_real_user_sig,  -- ufix1
              m_real_last => m_real_last_sig,  -- ufix1
              m_imag_valid => m_imag_valid_sig,  -- ufix1
              m_imag_data => m_imag_data_sig,  -- sfix16_En15
              m_imag_user => m_imag_user_sig,  -- ufix1
              m_imag_last => m_imag_last_sig  -- ufix1
              );

  enable_sig <= enable;

  s_window_valid_sig <= s_window_valid;

  s_real_valid_sig <= s_real_valid;

  s_imag_valid_sig <= s_imag_valid;

  enb <= dut_enable;

  ce_out <= ce_out_sig;

  m_real_valid <= m_real_valid_sig;

  m_real_data <= m_real_data_sig;

  m_real_user <= m_real_user_sig;

  m_real_last <= m_real_last_sig;

  m_imag_valid <= m_imag_valid_sig;

  m_imag_data <= m_imag_data_sig;

  m_imag_user <= m_imag_user_sig;

  m_imag_last <= m_imag_last_sig;

END rtl;

