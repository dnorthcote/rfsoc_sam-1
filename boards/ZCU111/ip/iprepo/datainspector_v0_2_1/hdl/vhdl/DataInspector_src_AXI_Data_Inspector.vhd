-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj\hdlsrc\dmareference\DataInspector_src_AXI_Data_Inspector.vhd
-- Created: 2019-09-09 17:10:55
-- 
-- Generated by MATLAB 9.6 and HDL Coder 3.14
-- 
-- 
-- -------------------------------------------------------------
-- Rate and Clocking Details
-- -------------------------------------------------------------
-- Model base rate: 3.90625e-09
-- Target subsystem base rate: 3.90625e-09
-- 
-- 
-- Clock Enable  Sample Time
-- -------------------------------------------------------------
-- ce_out        3.90625e-09
-- -------------------------------------------------------------
-- 
-- 
-- Output Signal                 Clock Enable  Sample Time
-- -------------------------------------------------------------
-- s_axis_tready                 ce_out        3.90625e-09
-- m_axis_tdata                  ce_out        3.90625e-09
-- m_axis_tvalid                 ce_out        3.90625e-09
-- m_axis_tlast                  ce_out        3.90625e-09
-- -------------------------------------------------------------
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: DataInspector_src_AXI_Data_Inspector
-- Source Path: AXI_Data_Inspector
-- Hierarchy Level: 0
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY DataInspector_src_AXI_Data_Inspector IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        clk_enable                        :   IN    std_logic;
        Transfer                          :   IN    std_logic;
        Reset_1                           :   IN    std_logic;
        s_axis_tdata                      :   IN    std_logic_vector(31 DOWNTO 0);  -- uint32
        s_axis_tvalid                     :   IN    std_logic;
        s_axis_tlast                      :   IN    std_logic;
        s_axis_tuser                      :   IN    std_logic;
        m_axis_tready                     :   IN    std_logic;
        ce_out                            :   OUT   std_logic;
        s_axis_tready                     :   OUT   std_logic;
        m_axis_tdata                      :   OUT   std_logic_vector(31 DOWNTO 0);  -- uint32
        m_axis_tvalid                     :   OUT   std_logic;
        m_axis_tlast                      :   OUT   std_logic
        );
END DataInspector_src_AXI_Data_Inspector;


ARCHITECTURE rtl OF DataInspector_src_AXI_Data_Inspector IS

  -- Component Declarations
  COMPONENT DataInspector_src_HDL_FIFO
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In_rsvd                         :   IN    std_logic_vector(31 DOWNTO 0);  -- uint32
          Push                            :   IN    std_logic;
          Pop                             :   IN    std_logic;
          Out_rsvd                        :   OUT   std_logic_vector(31 DOWNTO 0);  -- uint32
          Empty                           :   OUT   std_logic;
          Full                            :   OUT   std_logic
          );
  END COMPONENT;

  COMPONENT DataInspector_src_MATLAB_Function
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          tuser                           :   IN    std_logic;
          tlast                           :   IN    std_logic;
          transfer                        :   IN    std_logic;
          reset_1                         :   IN    std_logic;
          empty                           :   IN    std_logic;
          push                            :   OUT   std_logic;
          pop                             :   OUT   std_logic;
          tready                          :   OUT   std_logic
          );
  END COMPONENT;

  COMPONENT DataInspector_src_HDL_FIFO1
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In_rsvd                         :   IN    std_logic;
          Push                            :   IN    std_logic;
          Pop                             :   IN    std_logic;
          Out_rsvd                        :   OUT   std_logic
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : DataInspector_src_HDL_FIFO
    USE ENTITY work.DataInspector_src_HDL_FIFO(rtl);

  FOR ALL : DataInspector_src_MATLAB_Function
    USE ENTITY work.DataInspector_src_MATLAB_Function(rtl);

  FOR ALL : DataInspector_src_HDL_FIFO1
    USE ENTITY work.DataInspector_src_HDL_FIFO1(rtl);

  -- Signals
  SIGNAL enb                              : std_logic;
  SIGNAL s_axis_tdata_unsigned            : unsigned(31 DOWNTO 0);  -- uint32
  SIGNAL Delay1_out1                      : unsigned(31 DOWNTO 0);  -- uint32
  SIGNAL Delay3_out1                      : std_logic;
  SIGNAL HDL_FIFO_out2                    : std_logic;
  SIGNAL NOT_out1                         : std_logic;
  SIGNAL pop                              : std_logic;
  SIGNAL AND_out1                         : std_logic;
  SIGNAL AND1_out1                        : std_logic;
  SIGNAL HDL_FIFO_out3                    : std_logic;
  SIGNAL NOT1_out1                        : std_logic;
  SIGNAL push                             : std_logic;
  SIGNAL AND2_out1                        : std_logic;
  SIGNAL AND3_out1                        : std_logic;
  SIGNAL HDL_FIFO_out1                    : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL tready                           : std_logic;
  SIGNAL Delay_out1                       : std_logic;
  SIGNAL Delay2_out1                      : std_logic;
  SIGNAL HDL_FIFO1_out1                   : std_logic;

BEGIN
  u_HDL_FIFO : DataInspector_src_HDL_FIFO
    PORT MAP( clk => clk,
              reset => reset,
              enb => clk_enable,
              In_rsvd => std_logic_vector(Delay1_out1),  -- uint32
              Push => AND3_out1,
              Pop => AND1_out1,
              Out_rsvd => HDL_FIFO_out1,  -- uint32
              Empty => HDL_FIFO_out2,
              Full => HDL_FIFO_out3
              );

  u_MATLAB_Function : DataInspector_src_MATLAB_Function
    PORT MAP( clk => clk,
              reset => reset,
              enb => clk_enable,
              tuser => s_axis_tuser,
              tlast => s_axis_tlast,
              transfer => Transfer,
              reset_1 => Reset_1,
              empty => HDL_FIFO_out2,
              push => push,
              pop => pop,
              tready => tready
              );

  u_HDL_FIFO1 : DataInspector_src_HDL_FIFO1
    PORT MAP( clk => clk,
              reset => reset,
              enb => clk_enable,
              In_rsvd => Delay2_out1,
              Push => AND3_out1,
              Pop => AND1_out1,
              Out_rsvd => HDL_FIFO1_out1
              );

  s_axis_tdata_unsigned <= unsigned(s_axis_tdata);

  enb <= clk_enable;

  Delay1_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Delay1_out1 <= to_unsigned(0, 32);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Delay1_out1 <= s_axis_tdata_unsigned;
      END IF;
    END IF;
  END PROCESS Delay1_process;


  Delay3_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Delay3_out1 <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Delay3_out1 <= s_axis_tvalid;
      END IF;
    END IF;
  END PROCESS Delay3_process;


  NOT_out1 <=  NOT HDL_FIFO_out2;

  AND_out1 <= pop AND m_axis_tready;

  AND1_out1 <= AND_out1 AND NOT_out1;

  NOT1_out1 <=  NOT HDL_FIFO_out3;

  AND2_out1 <= Delay3_out1 AND push;

  AND3_out1 <= AND2_out1 AND NOT1_out1;

  Delay_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Delay_out1 <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Delay_out1 <= AND1_out1;
      END IF;
    END IF;
  END PROCESS Delay_process;


  Delay2_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Delay2_out1 <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Delay2_out1 <= s_axis_tlast;
      END IF;
    END IF;
  END PROCESS Delay2_process;


  ce_out <= clk_enable;

  s_axis_tready <= tready;

  m_axis_tdata <= HDL_FIFO_out1;

  m_axis_tvalid <= Delay_out1;

  m_axis_tlast <= HDL_FIFO1_out1;

END rtl;

