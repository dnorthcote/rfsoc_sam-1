-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj\hdlsrc\dmareference\DataInspector_dut.vhd
-- Created: 2019-09-09 17:10:59
-- 
-- Generated by MATLAB 9.6 and HDL Coder 3.14
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: DataInspector_dut
-- Source Path: DataInspector/DataInspector_dut
-- Hierarchy Level: 1
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY DataInspector_dut IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        dut_enable                        :   IN    std_logic;  -- ufix1
        Transfer                          :   IN    std_logic;  -- ufix1
        Reset_1                           :   IN    std_logic;  -- ufix1
        s_axis_tdata                      :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
        s_axis_tvalid                     :   IN    std_logic;  -- ufix1
        s_axis_tlast                      :   IN    std_logic;  -- ufix1
        s_axis_tuser                      :   IN    std_logic;  -- ufix1
        m_axis_tready                     :   IN    std_logic;  -- ufix1
        ce_out                            :   OUT   std_logic;  -- ufix1
        s_axis_tready                     :   OUT   std_logic;  -- ufix1
        m_axis_tdata                      :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
        m_axis_tvalid                     :   OUT   std_logic;  -- ufix1
        m_axis_tlast                      :   OUT   std_logic  -- ufix1
        );
END DataInspector_dut;


ARCHITECTURE rtl OF DataInspector_dut IS

  -- Component Declarations
  COMPONENT DataInspector_src_AXI_Data_Inspector
    PORT( clk                             :   IN    std_logic;
          clk_enable                      :   IN    std_logic;
          reset                           :   IN    std_logic;
          Transfer                        :   IN    std_logic;  -- ufix1
          Reset_1                         :   IN    std_logic;  -- ufix1
          s_axis_tdata                    :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          s_axis_tvalid                   :   IN    std_logic;  -- ufix1
          s_axis_tlast                    :   IN    std_logic;  -- ufix1
          s_axis_tuser                    :   IN    std_logic;  -- ufix1
          m_axis_tready                   :   IN    std_logic;  -- ufix1
          ce_out                          :   OUT   std_logic;  -- ufix1
          s_axis_tready                   :   OUT   std_logic;  -- ufix1
          m_axis_tdata                    :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          m_axis_tvalid                   :   OUT   std_logic;  -- ufix1
          m_axis_tlast                    :   OUT   std_logic  -- ufix1
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : DataInspector_src_AXI_Data_Inspector
    USE ENTITY work.DataInspector_src_AXI_Data_Inspector(rtl);

  -- Signals
  SIGNAL enb                              : std_logic;
  SIGNAL Transfer_sig                     : std_logic;  -- ufix1
  SIGNAL Reset_1_sig                      : std_logic;  -- ufix1
  SIGNAL s_axis_tvalid_sig                : std_logic;  -- ufix1
  SIGNAL s_axis_tlast_sig                 : std_logic;  -- ufix1
  SIGNAL s_axis_tuser_sig                 : std_logic;  -- ufix1
  SIGNAL m_axis_tready_sig                : std_logic;  -- ufix1
  SIGNAL ce_out_sig                       : std_logic;  -- ufix1
  SIGNAL s_axis_tready_sig                : std_logic;  -- ufix1
  SIGNAL m_axis_tdata_sig                 : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL m_axis_tvalid_sig                : std_logic;  -- ufix1
  SIGNAL m_axis_tlast_sig                 : std_logic;  -- ufix1

BEGIN
  u_DataInspector_src_AXI_Data_Inspector : DataInspector_src_AXI_Data_Inspector
    PORT MAP( clk => clk,
              clk_enable => enb,
              reset => reset,
              Transfer => Transfer_sig,  -- ufix1
              Reset_1 => Reset_1_sig,  -- ufix1
              s_axis_tdata => s_axis_tdata,  -- ufix32
              s_axis_tvalid => s_axis_tvalid_sig,  -- ufix1
              s_axis_tlast => s_axis_tlast_sig,  -- ufix1
              s_axis_tuser => s_axis_tuser_sig,  -- ufix1
              m_axis_tready => m_axis_tready_sig,  -- ufix1
              ce_out => ce_out_sig,  -- ufix1
              s_axis_tready => s_axis_tready_sig,  -- ufix1
              m_axis_tdata => m_axis_tdata_sig,  -- ufix32
              m_axis_tvalid => m_axis_tvalid_sig,  -- ufix1
              m_axis_tlast => m_axis_tlast_sig  -- ufix1
              );

  Transfer_sig <= Transfer;

  Reset_1_sig <= Reset_1;

  s_axis_tvalid_sig <= s_axis_tvalid;

  s_axis_tlast_sig <= s_axis_tlast;

  s_axis_tuser_sig <= s_axis_tuser;

  m_axis_tready_sig <= m_axis_tready;

  enb <= dut_enable;

  ce_out <= ce_out_sig;

  s_axis_tready <= s_axis_tready_sig;

  m_axis_tdata <= m_axis_tdata_sig;

  m_axis_tvalid <= m_axis_tvalid_sig;

  m_axis_tlast <= m_axis_tlast_sig;

END rtl;

